{"ast":null,"code":"var _jsxFileName = \"/Users/theCaptain/Code/goresttest/src/components/UserTable/UserTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = (name, email, gender, status) => {\n  return {\n    name,\n    email,\n    gender,\n    status\n  };\n};\n\nconst UserTable = () => {\n  _s();\n\n  const [tableData, setTableData] = useState('');\n  useEffect(() => {\n    fetch('https://gorest.co.in/public/v2/users', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer 35fbde49d5eb4a5a443446e7ba864d71ed3969a1ee48247811f6733ebe664c93'\n      }\n    }).then(res => res.json()).then(result => {\n      console.log('GET Request', result);\n      let userResults = result.map(user => {\n        createData(user.name, user.email, user.gender, user.status);\n      });\n    }).catch(err => console.log('error'));\n  }, [tableData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.carbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.protein\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTable, \"cWkMNkWp5b6V2tNX4V/5UpZBAUc=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","React","useEffect","useState","createData","name","email","gender","status","UserTable","tableData","setTableData","fetch","method","headers","Authorization","then","res","json","result","console","log","userResults","map","user","catch","err","minWidth","rows","row","border","calories","fat","carbs","protein"],"sources":["/Users/theCaptain/Code/goresttest/src/components/UserTable/UserTable.tsx"],"sourcesContent":["import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\n\nconst createData = (name: string, email: string, gender: string, status: string) => {\n  return { name, email, gender, status };\n};\n\nconst UserTable = () => {\n  const [tableData, setTableData] = useState('');\n\n  useEffect(() => {\n    fetch('https://gorest.co.in/public/v2/users', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer 35fbde49d5eb4a5a443446e7ba864d71ed3969a1ee48247811f6733ebe664c93'\n      }\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log('GET Request', result);\n        let userResults = result.map((user: any) => {\n          createData(user.name, user.email, user.gender, user.status);\n        });\n      })\n      .catch((err) => console.log('error'));\n  }, [tableData]);\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name </TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Gender</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default UserTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}